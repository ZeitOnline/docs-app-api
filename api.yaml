openapi: 3.0.2
info:
  description: "This is the API description for the ZON-App (iOS and Android)"
  version: "0.1.0"
  title: "ZON App API"
  termsOfService: "https://www.zeit.de/administratives/agb-kommentare-artikel"
  contact:
    email: "internet-technik@zeit.de"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
servers: 
  - url: "https://app-api.zeit.de/v.0.1.0/"
    description: "Production API"
  - url: "https://app-api.staging.zeit.de/v.0.1.0/"
    description: "Staging API"
paths:
  /structure:
    get:
       tags:
         - "structure"
       summary: "Get all infos about the site's structure, e.g. tabs"
       responses:
         "200":
           description: "Sucessful operation"
           content:
             application/json:
              schema:
                type: object
                properties:
                  tabs:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/tabDefinitionCpView'
                        - $ref: '#/components/schemas/tabDefinitionWebView'
                        - $ref: '#/components/schemas/tabDefinitionMenuView'
                        - $ref: '#/components/schemas/tabDefinitionStoryView'
              example: {tabs: [
                {id: start, title: Start, type: cpView, icon: iconHouse, subMenu: [
                  {id: homepage, title: Aktuell, type: menuEntryWeb, url: "https://www.zeit.de/index"},
                  {id: ressortPolitik, title: Politik, type: menuEntryNative, cpItem: {id: "{urn:uuid:b4d1e3b1-aac4-4a80-b820-e4093fe24a36}"} },
                  {id: ressortGesellschaft, title: Gesellschaft, type: menuEntryNative, cpItem: {id: "{urn:uuid:c92ad9be-67e0-497d-beee-6c2e063352cc}"} },
                  {id: ressortWirtschaft, title: Wirtschaft, type: menuEntryNative, cpItem: {id: "{urn:uuid:ea13ef02-74f3-4010-8cd7-777327fb881a}"} },
                  {id: ressortWissen, title: Wissen, type: menuEntryNative, cpItem: {id: "{urn:uuid:c84692ca-b0c9-4772-8c6b-85e2abc446e1}"} },
                  {id: ressortKultur, title: Kultur, type: menuEntryNative, cpItem: {id: "{urn:uuid:49b109f0-bbad-495e-8a88-ad91ec1ef8f9}"} }
                ]},
                {id: news, title: Schlagzeilen, type: cpView, icon: iconClock, subMenu: [
                  {id: newsAll, title: "Alle Schlagzeilen", type: menuEntryNative, cpItem: {id: "{urn:uuid:08945d5e-483c-4e7b-9843-69a8f590ada9}"} },
                  {id: newsMostImportant, title: "Die wichtigsten Nachrichten", type: menuEntryNative, cpItem: {id: "{urn:uuid:df60a52c-5f4d-4804-833d-ec31e24dbd43}"} },
                  {id: newsAnalysisAndReports, title: "Analysen und Hintergr√ºnde", type: menuEntryNative, cpItem: {id: "{urn:uuid:d6913463-1804-466d-b6d0-34376ef21916}"} }
                ]},
                {id: discover, title: Entdecken, type: storyView, icon: iconCompass},
                {id: zplus, title: Mein Abo, type: cpView, icon: iconZPlus, subMenu: [
                  {id: exclusive, title: "Exklusive Artikel", type: menuEntryNative, cpItem: {id: "{urn:uuid:0fd9480f-1b52-4fcb-942e-8089e378102e}"} },
                  {id: zeitPDFWebReader, title: "DIE ZEIT", type: menuEntryWeb, url: "https://epaper.zeit.de/abo/diezeit" },
                  {id: wochenMarkt, title: "Wochenmarkt", type: menuEntryWeb, url: "https://www.zeit.de/wochenmarkt" }
                ]},
                {id: menu, title: Mehr, type: menuView, icon: iconAvatar, sections: [
                  {id: user-menu, title: "Mein Bereich", entries: [
                    {id: reading-list, title: Merkliste, type: menuEntryNative, targetId: native-reading-list},
                    {id: reading-history, title: Verlauf, type: menuEntryNative, targetId: native-reading-history},
                    {id: comment-list, title: Kommentare, type: menuEntryWeb, url: "https://profile.zeit.de"}
                  ]}
                ]}
              ]}
         "503":
           description: "Server Timeout"
         "403":
           description: "Access Forbidden"
  /cp/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
            example: home
          required: true
          description: The whole definition of a centerpage (cp)
      tags:
        - cp
      summary: "Get all infos about centerpages"
      responses:
         "200":
           description: "Sucessful operation"
           content:
             application/json:
              schema:
                type: object
                properties:
                  cp:
                    type: string
                    example: "home"
                  items:
                    type: array
                    items:
                      anyOf:
                        - $ref: '#/components/schemas/cpDefinitionWeb'
                        - $ref: '#/components/schemas/cpDefinitionSection'
                        - $ref: '#/components/schemas/cpDefinitionTeaser'
                  webtrekkContentID:
                    type: string
                    example: "redaktion.homepage...centerpage.zede|www.zeit.de/index"
         "503":
           description: "Server Timeout"
         "403":
           description: "Access Forbidden"
components:
  schemas:
    cpDefinitionBase:
      required:
        - id
        - type
      properties:
        id:
           type: string
           description: "ID of the centerpage"
           example: "justsomeuniquestring"
    cpDefinitionTeaser:
      allOf:
        - $ref: '#/components/schemas/cpDefinitionBase'
        - required:
            - layoutType
            - title
            - url
            - dateFirstPublished
            - dateLastPublishedSemantic
        - properties:
            type:
              type: string
              example: teaser
              enum:
               - teaser
            title:
              type: string
              example: "This is a teaser title"
            supertitle: 
              type: string
              example: "The Kicker"
            text:
              type: string
              example: "This is the teaser text"
            image:
              type: object
              properties:
                base_url:
                  type: string
                  format: url
                  example: "https://img.zeit.de/2020-08/flightradar-4/cinema__"
            dateFirstPublished:
              type: string
              format: date-time
              example: "2019-12-31T13:12Z"
            dateLastPublishedSemantic:
              type: string
              format: date-time
              example: "2020-01-01T13:12Z"
            url:
              type: string
              format: uri
              example: "https://www.zeit.de/my/article"
    cpDefinitionGallery:
      allOf:
        - $ref: '#/components/schemas/cpDefinitionTeaser'
        - properties:
            imagecount:
              type: integer
              minimum: 0
              description: number of images contained in the image gallery
    cpDefinitionWeb:
      allOf:
        - $ref: '#/components/schemas/cpDefinitionBase'
        - required:
            - raw_content
        - properties:
            type:
              type: string
              example: web
              enum:
               - web
            raw_content:
              type: string
              format: html
              example: "<embed>Anything can happen here.</embed>"
    cpDefinitionSection:
      allOf:
        - $ref: '#/components/schemas/cpDefinitionBase'
        - required:
            - layoutType
            - title
            - sectionItems
        - properties:
            type:
              type: string
              example: section
              enum:
               - section
            layoutType:
              type: string
              example: layoutType1
              enum:
               - layoutType1
               - layoutType2
            link:
              type: string
              format: uri
              description: "A section often links to topic pages etc."
              example: "https://www.zeit.de/thema/coronavirus"
            title:
              type: string
              example: "This is a simple title"
            sectionItems:
              type: array
              items:
                anyOf:
                  - $ref: '#/components/schemas/cpDefinitionWeb'
                  - $ref: '#/components/schemas/cpDefinitionTeaser'
    tabDefinitionBase:
      required:
        - id
        - title
        - type
        - icon
      properties:
        id:
           type: string
           description: "ID of the tab"
           example: "justsomeuniquestring"
        title:
           type: string
           minLength: 1
           maxLength: 15
           example: "Start"
        icon:
          type: string
          example: iconHome        
    tabDefinitionCpView:
      allOf:
        - $ref: '#/components/schemas/tabDefinitionBase'
        - required:
            - subMenu
        - properties:
            type:
              type: string
              enum:
               - cpView
              example: "cpView"
            subMenu:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/menuEntryNative'
                  - $ref: '#/components/schemas/menuEntryWeb'
    tabDefinitionWebView:
      allOf:
        - $ref: '#/components/schemas/tabDefinitionBase'
        - properties:
            type:
              type: string
              enum:
               - webView
              example: "webView"
            url:
              format: uri
              type: string
              example: "https://www.zeit.de/index"
            subMenu:
              type: array
              items:
                oneOf:
                  - $ref: '#/components/schemas/menuEntryNative'
                  - $ref: '#/components/schemas/menuEntryWeb'
    tabDefinitionMenuView:
      allOf:
        - $ref: '#/components/schemas/tabDefinitionBase'
        - properties:
            type:
              type: string
              enum:
               - menuView
              example: "menuView"
            sections:
              type: array
              items:
                $ref: '#/components/schemas/menuSection'
    tabDefinitionStoryView:
      allOf:
        - $ref: '#/components/schemas/tabDefinitionBase'
      properties:
        type:
          type: string
          enum:
            - "storyView"
    menuSection:
      properties:
        id:
          type: string
          example: "menu-section-1"
        entries:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/menuEntryNative'
              - $ref: '#/components/schemas/menuEntryWeb'
              - $ref: '#/components/schemas/menuEntryBrowser'
    menuEntryBase:
      required:
        - id
        - title
        - type
      properties:
        id:
          type: string
          example: "menu-entry1"
        title:
          type: string
          example: "Menu Entry Title"
        type:
          type: string
          enum:
            - "menuEntryNative"
            - "menuEntryWeb"
            - "menuEntryBrowser"
    menuEntryNative:
      allOf:
        - $ref: '#/components/schemas/menuEntryBase'
        - properties:
            targetId:
              type: string
              example: "some-native-id"
            type: 
              example: "menuEntryNative"
            cpItem:
              required:
                - id
              properties:
                id:
                  type: string
                  format: uuid
                  example: "{urn:uuid:d995ba5a-a7fb-401a-bdc8-86cf2cbf0cda}"
              example: {id: "{urn:uuid:d995ba5a-a7fb-401a-bdc8-86cf2cbf0cda}"}
    menuEntryWeb:
      allOf:
        - $ref: '#/components/schemas/menuEntryBase'
        - required:
            - url
        - properties:
            url:
              type: string
              format: uri
              example: "https://www.zeit.de/some/webviewurl"
            type: 
              example: "menuEntryWeb"
    menuEntryBrowser:
      allOf:
        - $ref: '#/components/schemas/menuEntryBase'
        - required:
            - url
        - properties:
            url:
              type: string
              example: "https://www.zeit.de/some/browserurl"
            type:
              example: "menuEntryBrowser"
  securitySchemes:
    zon_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://oauth.zeit.de/oauth/authorize'
          scopes:
            'read:all': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header